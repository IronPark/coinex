// Code generated by protoc-gen-go. DO NOT EDIT.
// source: strategy.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	strategy.proto

It has these top-level messages:
	Property
	Dictionary
	Information
	UpdateState
	Empty
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Property struct {
	Type        string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	ValueInt    int32   `protobuf:"varint,2,opt,name=value_int,json=valueInt" json:"value_int,omitempty"`
	ValueFloat  float32 `protobuf:"fixed32,3,opt,name=value_float,json=valueFloat" json:"value_float,omitempty"`
	ValueString string  `protobuf:"bytes,4,opt,name=value_string,json=valueString" json:"value_string,omitempty"`
	ValueBool   bool    `protobuf:"varint,5,opt,name=value_bool,json=valueBool" json:"value_bool,omitempty"`
}

func (m *Property) Reset()                    { *m = Property{} }
func (m *Property) String() string            { return proto1.CompactTextString(m) }
func (*Property) ProtoMessage()               {}
func (*Property) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Property) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Property) GetValueInt() int32 {
	if m != nil {
		return m.ValueInt
	}
	return 0
}

func (m *Property) GetValueFloat() float32 {
	if m != nil {
		return m.ValueFloat
	}
	return 0
}

func (m *Property) GetValueString() string {
	if m != nil {
		return m.ValueString
	}
	return ""
}

func (m *Property) GetValueBool() bool {
	if m != nil {
		return m.ValueBool
	}
	return false
}

type Dictionary struct {
	CustomInt map[string]*Property `protobuf:"bytes,1,rep,name=customInt" json:"customInt,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Dictionary) Reset()                    { *m = Dictionary{} }
func (m *Dictionary) String() string            { return proto1.CompactTextString(m) }
func (*Dictionary) ProtoMessage()               {}
func (*Dictionary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Dictionary) GetCustomInt() map[string]*Property {
	if m != nil {
		return m.CustomInt
	}
	return nil
}

type Information struct {
	Name        string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Version     string `protobuf:"bytes,2,opt,name=Version" json:"Version,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description" json:"Description,omitempty"`
}

func (m *Information) Reset()                    { *m = Information{} }
func (m *Information) String() string            { return proto1.CompactTextString(m) }
func (*Information) ProtoMessage()               {}
func (*Information) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Information) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Information) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Information) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UpdateState struct {
	Boolean bool `protobuf:"varint,1,opt,name=Boolean" json:"Boolean,omitempty"`
}

func (m *UpdateState) Reset()                    { *m = UpdateState{} }
func (m *UpdateState) String() string            { return proto1.CompactTextString(m) }
func (*UpdateState) ProtoMessage()               {}
func (*UpdateState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateState) GetBoolean() bool {
	if m != nil {
		return m.Boolean
	}
	return false
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto1.RegisterType((*Property)(nil), "proto.Property")
	proto1.RegisterType((*Dictionary)(nil), "proto.Dictionary")
	proto1.RegisterType((*Information)(nil), "proto.Information")
	proto1.RegisterType((*UpdateState)(nil), "proto.UpdateState")
	proto1.RegisterType((*Empty)(nil), "proto.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Strategy service

type StrategyClient interface {
	Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Information, error)
	GetProperty(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Dictionary, error)
	SetProperty(ctx context.Context, in *Dictionary, opts ...grpc.CallOption) (*Empty, error)
	Update(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UpdateState, error)
}

type strategyClient struct {
	cc *grpc.ClientConn
}

func NewStrategyClient(cc *grpc.ClientConn) StrategyClient {
	return &strategyClient{cc}
}

func (c *strategyClient) Init(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.Strategy/Init", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyClient) Info(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Information, error) {
	out := new(Information)
	err := grpc.Invoke(ctx, "/proto.Strategy/Info", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyClient) GetProperty(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Dictionary, error) {
	out := new(Dictionary)
	err := grpc.Invoke(ctx, "/proto.Strategy/GetProperty", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyClient) SetProperty(ctx context.Context, in *Dictionary, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.Strategy/SetProperty", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyClient) Update(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UpdateState, error) {
	out := new(UpdateState)
	err := grpc.Invoke(ctx, "/proto.Strategy/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Strategy service

type StrategyServer interface {
	Init(context.Context, *Empty) (*Empty, error)
	Info(context.Context, *Empty) (*Information, error)
	GetProperty(context.Context, *Empty) (*Dictionary, error)
	SetProperty(context.Context, *Dictionary) (*Empty, error)
	Update(context.Context, *Empty) (*UpdateState, error)
}

func RegisterStrategyServer(s *grpc.Server, srv StrategyServer) {
	s.RegisterService(&_Strategy_serviceDesc, srv)
}

func _Strategy_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Strategy/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).Init(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strategy_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {v
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Strategy/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).Info(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strategy_GetProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).GetProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Strategy/GetProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).GetProperty(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strategy_SetProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dictionary)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).SetProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Strategy/SetProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).SetProperty(ctx, req.(*Dictionary))
	}
	return interceptor(ctx, in, info, handler)
}

func _Strategy_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Strategy/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServer).Update(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Strategy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Strategy",
	HandlerType: (*StrategyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _Strategy_Init_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Strategy_Info_Handler,
		},
		{
			MethodName: "GetProperty",
			Handler:    _Strategy_GetProperty_Handler,
		},
		{
			MethodName: "SetProperty",
			Handler:    _Strategy_SetProperty_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Strategy_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "strategy.proto",
}

func init() { proto1.RegisterFile("strategy.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xc1, 0x8a, 0xd4, 0x40,
	0x10, 0xa5, 0x67, 0x26, 0xbb, 0x49, 0x65, 0x59, 0xb5, 0x4e, 0x61, 0x45, 0x8c, 0x01, 0x31, 0x78,
	0xc8, 0x61, 0xbc, 0x88, 0x07, 0x0f, 0xba, 0xab, 0xe4, 0xa0, 0x48, 0x07, 0xbd, 0xc9, 0xd2, 0x3b,
	0xf6, 0x2c, 0xc1, 0xa4, 0x3b, 0x74, 0x6a, 0x85, 0x7c, 0x8b, 0xe0, 0xd7, 0xf9, 0x21, 0xd2, 0xdd,
	0xc9, 0x4e, 0x66, 0x06, 0x4f, 0xe9, 0x7a, 0xf5, 0x5e, 0x55, 0xbf, 0xd7, 0x81, 0xf3, 0x9e, 0x8c,
	0x20, 0x79, 0x3b, 0x14, 0x9d, 0xd1, 0xa4, 0x31, 0x70, 0x9f, 0xec, 0x0f, 0x83, 0xf0, 0x8b, 0xd1,
	0x9d, 0x34, 0x34, 0x20, 0xc2, 0x8a, 0x86, 0x4e, 0x26, 0x2c, 0x65, 0x79, 0xc4, 0xdd, 0x19, 0x1f,
	0x43, 0xf4, 0x4b, 0x34, 0x77, 0xf2, 0xba, 0x56, 0x94, 0x2c, 0x52, 0x96, 0x07, 0x3c, 0x74, 0x40,
	0xa9, 0x08, 0x9f, 0x42, 0xec, 0x9b, 0xdb, 0x46, 0x0b, 0x4a, 0x96, 0x29, 0xcb, 0x17, 0x1c, 0x1c,
	0xf4, 0xc1, 0x22, 0xf8, 0x0c, 0xce, 0x3c, 0xa1, 0x27, 0x53, 0xab, 0xdb, 0x64, 0xe5, 0x26, 0x7b,
	0x51, 0xe5, 0x20, 0x7c, 0x02, 0x5e, 0x70, 0x7d, 0xa3, 0x75, 0x93, 0x04, 0x29, 0xcb, 0x43, 0xee,
	0x57, 0xbe, 0xd3, 0xba, 0xc9, 0x7e, 0x33, 0x80, 0xcb, 0x7a, 0x43, 0xb5, 0x56, 0xc2, 0x0c, 0xf8,
	0x16, 0xa2, 0xcd, 0x5d, 0x4f, 0xba, 0x2d, 0x15, 0x25, 0x2c, 0x5d, 0xe6, 0xf1, 0x3a, 0xf5, 0x8e,
	0x8a, 0x1d, 0xab, 0x78, 0x3f, 0x51, 0xae, 0x14, 0x99, 0x81, 0xef, 0x24, 0x17, 0x9f, 0xe0, 0x7c,
	0xbf, 0x89, 0x0f, 0x61, 0xf9, 0x53, 0x0e, 0xa3, 0x67, 0x7b, 0xc4, 0xe7, 0x10, 0xb8, 0xfd, 0xce,
	0x6e, 0xbc, 0x7e, 0x30, 0xce, 0x9f, 0x62, 0xe2, 0xbe, 0xfb, 0x66, 0xf1, 0x9a, 0x65, 0xdf, 0x21,
	0x2e, 0xd5, 0x56, 0x9b, 0x56, 0xd8, 0xd5, 0x36, 0xc0, 0xcf, 0xa2, 0xbd, 0x0f, 0xd0, 0x9e, 0x31,
	0x81, 0xd3, 0x6f, 0xd2, 0xf4, 0xb5, 0x56, 0x6e, 0x5e, 0xc4, 0xa7, 0x12, 0x53, 0x88, 0x2f, 0x65,
	0xbf, 0x31, 0x75, 0x67, 0xc5, 0x2e, 0xbd, 0x88, 0xcf, 0xa1, 0xec, 0x05, 0xc4, 0x5f, 0xbb, 0x1f,
	0x82, 0x64, 0x45, 0x82, 0xdc, 0x28, 0x9b, 0x89, 0x14, 0xca, 0x6d, 0x08, 0xf9, 0x54, 0x66, 0xa7,
	0x10, 0x5c, 0xb5, 0x1d, 0x0d, 0xeb, 0xbf, 0x0c, 0xc2, 0x6a, 0x7c, 0x69, 0xcc, 0x60, 0x55, 0xaa,
	0x9a, 0xf0, 0x6c, 0x74, 0xe0, 0x28, 0x17, 0x7b, 0x15, 0xe6, 0x96, 0xb3, 0xd5, 0x07, 0x1c, 0x1c,
	0xab, 0xb9, 0xb9, 0x02, 0xe2, 0x8f, 0x92, 0xee, 0x7f, 0x96, 0x7d, 0xc1, 0xa3, 0xa3, 0x47, 0xb0,
	0xfc, 0x6a, 0xc6, 0x3f, 0x66, 0x1c, 0xdc, 0xe4, 0x25, 0x9c, 0x78, 0xb3, 0xff, 0xb9, 0xcb, 0x2c,
	0x89, 0x9b, 0x13, 0x07, 0xbd, 0xfa, 0x17, 0x00, 0x00, 0xff, 0xff, 0x96, 0x01, 0xf7, 0x88, 0xd6,
	0x02, 0x00, 0x00,
}
